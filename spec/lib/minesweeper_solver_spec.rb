require 'rails_helper'
require 'minesweeper_solver'

RSpec.describe 'MinesweeperSolver lib', type: :lib do
  describe 'can' do
    it 'create a instance of MinesweeperSolver' do
      solver = MinesweeperSolver.new
      expect(solver).to be_a(MinesweeperSolver)
    end

    it 'find empty spots' do
      board_to_solve = [["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"], ["|", "*", " ", " ", "*", "*", " ", " ", "*", "*", "*", "*", "*", "|"], ["|", " ", "*", " ", " ", "*", "*", " ", " ", "*", "*", " ", " ", "|"], ["|", "*", "*", "*", "*", " ", "*", "*", " ", "*", " ", "*", " ", "|"], ["|", " ", "*", " ", " ", "*", " ", "*", " ", " ", " ", "*", " ", "|"], ["|", "*", " ", " ", " ", " ", "*", " ", " ", " ", "*", " ", " ", "|"], ["|", "*", "*", " ", " ", "*", " ", "*", " ", "*", " ", " ", " ", "|"], ["|", " ", " ", " ", "*", " ", " ", " ", " ", "*", " ", " ", "*", "|"], ["|", "*", " ", "*", "*", " ", "*", "*", " ", " ", "*", " ", "*", "|"], ["|", " ", " ", " ", " ", "*", " ", " ", " ", "*", "*", "*", "*", "|"], ["|", "*", " ", "*", " ", "*", "*", " ", " ", "*", "*", "*", " ", "|"], ["|", "*", " ", " ", "*", " ", "*", "*", " ", " ", "*", " ", "*", "|"], ["|", " ", "*", " ", "*", " ", "*", "*", "*", " ", "*", " ", "*", "|"], ["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"]]
      empty_spot_list = [{:row=>1, :col=>2}, {:row=>1, :col=>3}, {:row=>1, :col=>6}, {:row=>1, :col=>7}, {:row=>2, :col=>1}, {:row=>2, :col=>3}, {:row=>2, :col=>4}, {:row=>2, :col=>7}, {:row=>2, :col=>8}, {:row=>2, :col=>11}, {:row=>2, :col=>12}, {:row=>3, :col=>5}, {:row=>3, :col=>8}, {:row=>3, :col=>10}, {:row=>3, :col=>12}, {:row=>4, :col=>1}, {:row=>4, :col=>3}, {:row=>4, :col=>4}, {:row=>4, :col=>6}, {:row=>4, :col=>8}, {:row=>4, :col=>9}, {:row=>4, :col=>10}, {:row=>4, :col=>12}, {:row=>5, :col=>2}, {:row=>5, :col=>3}, {:row=>5, :col=>4}, {:row=>5, :col=>5}, {:row=>5, :col=>7}, {:row=>5, :col=>8}, {:row=>5, :col=>9}, {:row=>5, :col=>11}, {:row=>5, :col=>12}, {:row=>6, :col=>3}, {:row=>6, :col=>4}, {:row=>6, :col=>6}, {:row=>6, :col=>8}, {:row=>6, :col=>10}, {:row=>6, :col=>11}, {:row=>6, :col=>12}, {:row=>7, :col=>1}, {:row=>7, :col=>2}, {:row=>7, :col=>3}, {:row=>7, :col=>5}, {:row=>7, :col=>6}, {:row=>7, :col=>7}, {:row=>7, :col=>8}, {:row=>7, :col=>10}, {:row=>7, :col=>11}, {:row=>8, :col=>2}, {:row=>8, :col=>5}, {:row=>8, :col=>8}, {:row=>8, :col=>9}, {:row=>8, :col=>11}, {:row=>9, :col=>1}, {:row=>9, :col=>2}, {:row=>9, :col=>3}, {:row=>9, :col=>4}, {:row=>9, :col=>6}, {:row=>9, :col=>7}, {:row=>9, :col=>8}, {:row=>10, :col=>2}, {:row=>10, :col=>4}, {:row=>10, :col=>7}, {:row=>10, :col=>8}, {:row=>10, :col=>12}, {:row=>11, :col=>2}, {:row=>11, :col=>3}, {:row=>11, :col=>5}, {:row=>11, :col=>8}, {:row=>11, :col=>9}, {:row=>11, :col=>11}, {:row=>12, :col=>1}, {:row=>12, :col=>3}, {:row=>12, :col=>5}, {:row=>12, :col=>9}, {:row=>12, :col=>11}]
      solver = MinesweeperSolver.new

      expect(solver.search_empty_spot(board_to_solve)).to eq(empty_spot_list)
    end

    it 'find neighbors from a given empty spot' do
      board_to_solve = [["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"], ["|", "*", " ", " ", "*", "*", " ", " ", "*", "*", "*", "*", "*", "|"], ["|", " ", "*", " ", " ", "*", "*", " ", " ", "*", "*", " ", " ", "|"], ["|", "*", "*", "*", "*", " ", "*", "*", " ", "*", " ", "*", " ", "|"], ["|", " ", "*", " ", " ", "*", " ", "*", " ", " ", " ", "*", " ", "|"], ["|", "*", " ", " ", " ", " ", "*", " ", " ", " ", "*", " ", " ", "|"], ["|", "*", "*", " ", " ", "*", " ", "*", " ", "*", " ", " ", " ", "|"], ["|", " ", " ", " ", "*", " ", " ", " ", " ", "*", " ", " ", "*", "|"], ["|", "*", " ", "*", "*", " ", "*", "*", " ", " ", "*", " ", "*", "|"], ["|", " ", " ", " ", " ", "*", " ", " ", " ", "*", "*", "*", "*", "|"], ["|", "*", " ", "*", " ", "*", "*", " ", " ", "*", "*", "*", " ", "|"], ["|", "*", " ", " ", "*", " ", "*", "*", " ", " ", "*", " ", "*", "|"], ["|", " ", "*", " ", "*", " ", "*", "*", "*", " ", "*", " ", "*", "|"], ["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"]]
      neighbors = ["-", "-", "-", "*", " ", " ", "*", " "]
      solver = MinesweeperSolver.new

      expect(solver.find_neighbors(board_to_solve, 1, 2)).to eq(neighbors)
    end

    it 'count bombs' do
      board_to_solve = [["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"], ["|", "*", " ", " ", "*", "*", " ", " ", "*", "*", "*", "*", "*", "|"], ["|", " ", "*", " ", " ", "*", "*", " ", " ", "*", "*", " ", " ", "|"], ["|", "*", "*", "*", "*", " ", "*", "*", " ", "*", " ", "*", " ", "|"], ["|", " ", "*", " ", " ", "*", " ", "*", " ", " ", " ", "*", " ", "|"], ["|", "*", " ", " ", " ", " ", "*", " ", " ", " ", "*", " ", " ", "|"], ["|", "*", "*", " ", " ", "*", " ", "*", " ", "*", " ", " ", " ", "|"], ["|", " ", " ", " ", "*", " ", " ", " ", " ", "*", " ", " ", "*", "|"], ["|", "*", " ", "*", "*", " ", "*", "*", " ", " ", "*", " ", "*", "|"], ["|", " ", " ", " ", " ", "*", " ", " ", " ", "*", "*", "*", "*", "|"], ["|", "*", " ", "*", " ", "*", "*", " ", " ", "*", "*", "*", " ", "|"], ["|", "*", " ", " ", "*", " ", "*", "*", " ", " ", "*", " ", "*", "|"], ["|", " ", "*", " ", "*", " ", "*", "*", "*", " ", "*", " ", "*", "|"], ["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"]]
      empty_spot_list = [{:row=>1, :col=>2}, {:row=>1, :col=>3}, {:row=>1, :col=>6}, {:row=>1, :col=>7}, {:row=>2, :col=>1}, {:row=>2, :col=>3}, {:row=>2, :col=>4}, {:row=>2, :col=>7}, {:row=>2, :col=>8}, {:row=>2, :col=>11}, {:row=>2, :col=>12}, {:row=>3, :col=>5}, {:row=>3, :col=>8}, {:row=>3, :col=>10}, {:row=>3, :col=>12}, {:row=>4, :col=>1}, {:row=>4, :col=>3}, {:row=>4, :col=>4}, {:row=>4, :col=>6}, {:row=>4, :col=>8}, {:row=>4, :col=>9}, {:row=>4, :col=>10}, {:row=>4, :col=>12}, {:row=>5, :col=>2}, {:row=>5, :col=>3}, {:row=>5, :col=>4}, {:row=>5, :col=>5}, {:row=>5, :col=>7}, {:row=>5, :col=>8}, {:row=>5, :col=>9}, {:row=>5, :col=>11}, {:row=>5, :col=>12}, {:row=>6, :col=>3}, {:row=>6, :col=>4}, {:row=>6, :col=>6}, {:row=>6, :col=>8}, {:row=>6, :col=>10}, {:row=>6, :col=>11}, {:row=>6, :col=>12}, {:row=>7, :col=>1}, {:row=>7, :col=>2}, {:row=>7, :col=>3}, {:row=>7, :col=>5}, {:row=>7, :col=>6}, {:row=>7, :col=>7}, {:row=>7, :col=>8}, {:row=>7, :col=>10}, {:row=>7, :col=>11}, {:row=>8, :col=>2}, {:row=>8, :col=>5}, {:row=>8, :col=>8}, {:row=>8, :col=>9}, {:row=>8, :col=>11}, {:row=>9, :col=>1}, {:row=>9, :col=>2}, {:row=>9, :col=>3}, {:row=>9, :col=>4}, {:row=>9, :col=>6}, {:row=>9, :col=>7}, {:row=>9, :col=>8}, {:row=>10, :col=>2}, {:row=>10, :col=>4}, {:row=>10, :col=>7}, {:row=>10, :col=>8}, {:row=>10, :col=>12}, {:row=>11, :col=>2}, {:row=>11, :col=>3}, {:row=>11, :col=>5}, {:row=>11, :col=>8}, {:row=>11, :col=>9}, {:row=>11, :col=>11}, {:row=>12, :col=>1}, {:row=>12, :col=>3}, {:row=>12, :col=>5}, {:row=>12, :col=>9}, {:row=>12, :col=>11}]
      bombs_count = [{:row=>1, :col=>2, :bomb=>2}, {:row=>1, :col=>3, :bomb=>2}, {:row=>1, :col=>6, :bomb=>3}, {:row=>1, :col=>7, :bomb=>2}, {:row=>2, :col=>1, :bomb=>4}, {:row=>2, :col=>3, :bomb=>5}, {:row=>2, :col=>4, :bomb=>5}, {:row=>2, :col=>7, :bomb=>4}, {:row=>2, :col=>8, :bomb=>5}, {:row=>2, :col=>11, :bomb=>5}, {:row=>2, :col=>12, :bomb=>3}, {:row=>3, :col=>5, :bomb=>5}, {:row=>3, :col=>8, :bomb=>4}, {:row=>3, :col=>10, :bomb=>5}, {:row=>3, :col=>12, :bomb=>2}, {:row=>4, :col=>1, :bomb=>4}, {:row=>4, :col=>3, :bomb=>4}, {:row=>4, :col=>4, :bomb=>3}, {:row=>4, :col=>6, :bomb=>5}, {:row=>4, :col=>8, :bomb=>3}, {:row=>4, :col=>9, :bomb=>2}, {:row=>4, :col=>10, :bomb=>4}, {:row=>4, :col=>12, :bomb=>2}, {:row=>5, :col=>2, :bomb=>4}, {:row=>5, :col=>3, :bomb=>2}, {:row=>5, :col=>4, :bomb=>2}, {:row=>5, :col=>5, :bomb=>3}, {:row=>5, :col=>7, :bomb=>3}, {:row=>5, :col=>8, :bomb=>3}, {:row=>5, :col=>9, :bomb=>2}, {:row=>5, :col=>11, :bomb=>2}, {:row=>5, :col=>12, :bomb=>1}, {:row=>6, :col=>3, :bomb=>2}, {:row=>6, :col=>4, :bomb=>2}, {:row=>6, :col=>6, :bomb=>3}, {:row=>6, :col=>8, :bomb=>3}, {:row=>6, :col=>10, :bomb=>3}, {:row=>6, :col=>11, :bomb=>2}, {:row=>6, :col=>12, :bomb=>1}, {:row=>7, :col=>1, :bomb=>3}, {:row=>7, :col=>2, :bomb=>4}, {:row=>7, :col=>3, :bomb=>4}, {:row=>7, :col=>5, :bomb=>4}, {:row=>7, :col=>6, :bomb=>4}, {:row=>7, :col=>7, :bomb=>3}, {:row=>7, :col=>8, :bomb=>4}, {:row=>7, :col=>10, :bomb=>3}, {:row=>7, :col=>11, :bomb=>3}, {:row=>8, :col=>2, :bomb=>2}, {:row=>8, :col=>5, :bomb=>4}, {:row=>8, :col=>8, :bomb=>3}, {:row=>8, :col=>9, :bomb=>4}, {:row=>8, :col=>11, :bomb=>6}, {:row=>9, :col=>1, :bomb=>2}, {:row=>9, :col=>2, :bomb=>4}, {:row=>9, :col=>3, :bomb=>3}, {:row=>9, :col=>4, :bomb=>5}, {:row=>9, :col=>6, :bomb=>5}, {:row=>9, :col=>7, :bomb=>3}, {:row=>9, :col=>8, :bomb=>3}, {:row=>10, :col=>2, :bomb=>3}, {:row=>10, :col=>4, :bomb=>4}, {:row=>10, :col=>7, :bomb=>3}, {:row=>10, :col=>8, :bomb=>3}, {:row=>10, :col=>12, :bomb=>4}, {:row=>11, :col=>2, :bomb=>4}, {:row=>11, :col=>3, :bomb=>4}, {:row=>11, :col=>5, :bomb=>6}, {:row=>11, :col=>8, :bomb=>4}, {:row=>11, :col=>9, :bomb=>5}, {:row=>11, :col=>11, :bomb=>6}, {:row=>12, :col=>1, :bomb=>2}, {:row=>12, :col=>3, :bomb=>3}, {:row=>12, :col=>5, :bomb=>4}, {:row=>12, :col=>9, :bomb=>3}, {:row=>12, :col=>11, :bomb=>4}]
      solver = MinesweeperSolver.new

      expect(solver.bomb_counter(board_to_solve, empty_spot_list)).to eq(bombs_count)
    end

    it 'solve a minesweeper board' do
      board_to_solve = [["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"], ["|", "*", " ", " ", "*", "*", " ", " ", "*", "*", "*", "*", "*", "|"], ["|", " ", "*", " ", " ", "*", "*", " ", " ", "*", "*", " ", " ", "|"], ["|", "*", "*", "*", "*", " ", "*", "*", " ", "*", " ", "*", " ", "|"], ["|", " ", "*", " ", " ", "*", " ", "*", " ", " ", " ", "*", " ", "|"], ["|", "*", " ", " ", " ", " ", "*", " ", " ", " ", "*", " ", " ", "|"], ["|", "*", "*", " ", " ", "*", " ", "*", " ", "*", " ", " ", " ", "|"], ["|", " ", " ", " ", "*", " ", " ", " ", " ", "*", " ", " ", "*", "|"], ["|", "*", " ", "*", "*", " ", "*", "*", " ", " ", "*", " ", "*", "|"], ["|", " ", " ", " ", " ", "*", " ", " ", " ", "*", "*", "*", "*", "|"], ["|", "*", " ", "*", " ", "*", "*", " ", " ", "*", "*", "*", " ", "|"], ["|", "*", " ", " ", "*", " ", "*", "*", " ", " ", "*", " ", "*", "|"], ["|", " ", "*", " ", "*", " ", "*", "*", "*", " ", "*", " ", "*", "|"], ["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"]]
      board_solution = [["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"], ["|", "*", "2", "2", "*", "*", "3", "2", "*", "*", "*", "*", "*", "|"], ["|", "4", "*", "5", "5", "*", "*", "4", "5", "*", "*", "5", "3", "|"], ["|", "*", "*", "*", "*", "5", "*", "*", "4", "*", "5", "*", "2", "|"], ["|", "4", "*", "4", "3", "*", "5", "*", "3", "2", "4", "*", "2", "|"], ["|", "*", "4", "2", "2", "3", "*", "3", "3", "2", "*", "2", "1", "|"], ["|", "*", "*", "2", "2", "*", "3", "*", "3", "*", "3", "2", "1", "|"], ["|", "3", "4", "4", "*", "4", "4", "3", "4", "*", "3", "3", "*", "|"], ["|", "*", "2", "*", "*", "4", "*", "*", "3", "4", "*", "6", "*", "|"], ["|", "2", "4", "3", "5", "*", "5", "3", "3", "*", "*", "*", "*", "|"], ["|", "*", "3", "*", "4", "*", "*", "3", "3", "*", "*", "*", "4", "|"], ["|", "*", "4", "4", "*", "6", "*", "*", "4", "5", "*", "6", "*", "|"], ["|", "2", "*", "3", "*", "4", "*", "*", "*", "3", "*", "4", "*", "|"], ["+", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "-", "+"]]

      solver = MinesweeperSolver.new
      board_solved = solver.find_solution(board_to_solve)

      expect(board_solved).to be_a(Array)
      expect(board_solved).to eq(board_solution)
    end
  end
end
